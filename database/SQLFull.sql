CREATE TABLE Category (
  category_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME category_id_seq START WITH 1),
  name varchar(255) NOT NULL,
  description varchar(255) NOT NULL,
  parent_id integer DEFAULT NULL
);


CREATE TABLE Client (
  client_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME client_id_seq START WITH 1),
  name varchar(255) NOT NULL,
  phone_number integer NOT NULL,
  address varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  city varchar(255) NOT NULL,
  country varchar(255) NOT NULL,
  postal_code integer NOT NULL
);

CREATE TABLE Role (
  role_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME role_id_seq START WITH 1),
  name varchar(255) NOT NULL,
  description varchar(255) NOT NULL,
  UNIQUE (name)
);

CREATE TABLE Supplier (
  supplier_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME supplier_id_seq START WITH 1),
  name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  address varchar(255) NOT NULL,
  city varchar(255) NOT NULL,
  region varchar(255) NOT NULL,
  country varchar(255) NOT NULL,
  postal_code integer NOT NULL,
  phone_number integer NOT NULL
);

CREATE TYPE order_status AS enum(
  'Pending',
  'Processing',
  'Shipped',
  'Delivered',
  'Canceled');

CREATE TABLE ClientOrder (
  order_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME order_id_seq START WITH 1),
  client_id integer NOT NULL,
  status order_status NOT NULL,
  timestamp timestamp NOT NULL,
  total_items integer NOT NULL,
  total_amount float NOT NULL,
  CONSTRAINT ClientOrder_Client_foreign
  FOREIGN KEY (client_id) REFERENCES Client (client_id)
);

CREATE TYPE item_status AS enum(
  'In Stock',
  'Out Of Stock'
  );

CREATE TABLE Item (
  item_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME item_id_seq START WITH 1),
  category_id integer NOT NULL,
  model varchar(255) NOT NULL,
  image_path varchar(255) NULL,
  status item_status NOT NULL,
  manufacturer varchar(255) NOT NULL,
  unit_price float NOT NULL,
  date_of_arrival integer NOT NULL,
  units_in_stock integer NOT NULL,
  faulty_units integer NOT NULL,
  CONSTRAINT Item_Category_foreign
  FOREIGN KEY (category_id) REFERENCES Category (category_id)
);

CREATE TABLE UserProfile (
  user_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME user_id_seq START WITH 1),
  role_id integer NOT NULL,
  client_id integer NULL,
  login varchar(255) NOT NULL,
  password varchar(255) NOT NULL,
  image_path varchar(255) NULL,
  full_name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone_number integer NOT NULL,
  passport integer NOT NULL,
  UNIQUE (email),
  UNIQUE (phone_number),
  CONSTRAINT UserProfile_Client_foreign
  FOREIGN KEY (client_id) REFERENCES Client (client_id)
  ON UPDATE CASCADE
  ON DELETE CASCADE,
  CONSTRAINT UserProfile_Role_foreign
  FOREIGN KEY (role_id) REFERENCES Role (role_id)
  ON UPDATE CASCADE
  ON DELETE CASCADE
);

CREATE TABLE OrderProduct (
  order_product_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME order_product_id_seq START WITH 1),
  order_id integer NOT NULL,
  item_id integer NOT NULL,
  quantity integer NOT NULL,
  CONSTRAINT OrderProduct_Item_foreign
  FOREIGN KEY (item_id) REFERENCES Item (item_id),
  CONSTRAINT OrderProduct_ClientOrder_foreign
  FOREIGN KEY (order_id) REFERENCES ClientOrder (order_id)
);

CREATE TABLE SupplierItem (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME supplier_item_id_seq START WITH 1),
  supplier_id integer NOT NULL,
  item_id integer NOT NULL,
  CONSTRAINT SupplierItem_Supplier_foreign
  FOREIGN KEY (supplier_id) REFERENCES Supplier (supplier_id),
  CONSTRAINT SupplierItem_Item_foreign
  FOREIGN KEY (item_id) REFERENCES Item (item_id)
);

CREATE TABLE OrderProductReturn (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME order_product_return_id_seq START WITH 1),
  order_product_id integer NOT NULL,
  order_return_id integer NOT NULL,
  CONSTRAINT OrderProductReturn_OrderProduct_foreign
  FOREIGN KEY (order_product_id) REFERENCES OrderProduct (order_product_id)
);
CREATE TYPE return_reason AS enum('Defective Product',
    'Wrong Item Sent',
    'Item Not as Described',
    'Changed Mind',
    'Other');

CREATE TYPE return_status AS ENUM (
    'Received',
    'Processing',
    'Refunded',
    'Rejected'
);

CREATE TABLE OrderReturn (
  order_return_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY(SEQUENCE NAME order_return_id_seq START WITH 1),
  order_product_return_id integer NOT NULL,
  quantity integer NOT NULL,
  reason return_reason NOT NULL,
  description varchar(255) NOT NULL,
  status return_status NOT NULL,
  return_date date NOT NULL,
  CONSTRAINT OrderReturn_OrderProductReturn_foreign
  FOREIGN KEY (order_product_return_id) REFERENCES OrderProductReturn (id)
);

INSERT INTO Category (name, description, parent_id) VALUES
('Computer Parts', 'Category for computer parts', NULL),
('Graphics cards', 'Category for graphics cards', 1),
('Personal computers', 'Category for personal computers', NULL),
('Laptops', 'Category for laptops', 3);

INSERT INTO Client (name, phone_number, address, email, city, country, postal_code) VALUES
('Evil enterprises', 978440302, '123 Main St', 'evil@example.com', 'New York', 'USA', 10001),
('Jane Smith', 978440301, '456 Elm St', 'janesmith@example.com', 'Los Angeles', 'USA', 90001);

INSERT INTO Role (name, description) VALUES
('Admin', 'Administrator role with full access'),
('Client', 'Standard user role with limited access'),
('Warehouse worker', 'Has access to the information about available items');

INSERT INTO Supplier (name, email, address, city, region, country, postal_code, phone_number) VALUES
('ABC Suppliers', 'abc@example.com', '789 Oak St', 'Chicago', 'IL', 'USA', 60007, 978440307),
('XYZ Suppliers', 'xyz@example.com', '321 Pine St', 'Houston', 'TX', 'USA', 77002, 369121518);

INSERT INTO ClientOrder (client_id, status, timestamp, total_items, total_amount) VALUES
(1, 'Pending', CURRENT_TIMESTAMP, 5, 12.2),
(2, 'Processing', CURRENT_TIMESTAMP, 3, 32.2);

INSERT INTO Item (category_id, model, image_path, status, manufacturer, unit_price, date_of_arrival, units_in_stock, faulty_units) VALUES
(3, 'Smartphone X', '/iphone-x.jpg', 'In Stock', 'ABC Electronics', 599.99, 20220101, 100, 2),
(4, 'Laptop 10', null, 'In Stock', 'Laptops inc.', 19.99, 20220115, 50, 0);

INSERT INTO UserProfile (role_id, client_id, login, password, full_name, email, phone_number, passport) VALUES
(1, null, 'admin', 'adminpass', 'Admin User', 'admin@example.com', 978440304, 978440307),
(2, 2, 'user', 'userpass', 'Regular User', 'user@example.com', 978440303, 978440307);

INSERT INTO OrderProduct (order_id, item_id, quantity) VALUES
(1, 1, 2),
(2, 2, 1);

INSERT INTO SupplierItem (supplier_id, item_id) VALUES
(1, 1),
(2, 2);

INSERT INTO OrderProductReturn (order_product_id, order_return_id) VALUES
(1, 1),
(2, 2);

INSERT INTO OrderReturn (order_product_return_id, quantity, reason, description, status, return_date) VALUES
(1, 1, 'Defective Product', 'Received a damaged item', 'Received', '2022-01-20'),
(2, 2, 'Wrong Item Sent', 'Received incorrect product', 'Processing', '2022-01-25');

INSERT INTO Item (category_id, model, image_path, status, manufacturer, unit_price, date_of_arrival, units_in_stock, faulty_units) VALUES
(4, 'New Expensive Laptop 17', null, 'In Stock', 'Laptops inc.', 5999.99, 20220115, 500, 0);

SELECT * FROM OrderProduct;
